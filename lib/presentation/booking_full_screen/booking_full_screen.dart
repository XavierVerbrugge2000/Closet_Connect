import '../booking_full_screen/widgets/booking_full_item_widget.dart';import 'package:closet_connect_final/core/app_export.dart';import 'package:closet_connect_final/widgets/app_bar/appbar_iconbutton.dart';import 'package:closet_connect_final/widgets/app_bar/appbar_image.dart';import 'package:closet_connect_final/widgets/app_bar/custom_app_bar.dart';import 'package:flutter/material.dart';
// ignore_for_file: must_be_immutable
class BookingFullScreen extends StatelessWidget {List<String> autoCompleteItemList = ["test", "test1", "test2", "test3"];

@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(backgroundColor: ColorConstant.whiteA700, resizeToAvoidBottomInset: false, appBar: CustomAppBar(height: getVerticalSize(56.00), leadingWidth: 64, leading: AppbarIconbutton(svgPath: ImageConstant.imgArrowleftWhiteA700, margin: getMargin(left: 34, bottom: 3), onTap: () => onTapArrowleft(context)), centerTitle: true, title: Row(children: [AppbarImage(height: getVerticalSize(22.00), width: getHorizontalSize(20.00), svgPath: ImageConstant.imgLocation, margin: getMargin(left: 71, top: 3, bottom: 7)), Padding(padding: getPadding(left: 9, top: 6, bottom: 6), child: Text("Zurich, CH", overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoMedium16.copyWith(height: getVerticalSize(1.00))))]), actions: [Container(height: getVerticalSize(32.30), width: getHorizontalSize(29.13), margin: getMargin(left: 75, right: 32), child: Stack(alignment: Alignment.center, children: [AppbarImage(height: getVerticalSize(27.00), width: getHorizontalSize(24.00), svgPath: ImageConstant.imgCartDeepOrange10027x24, margin: getMargin(top: 5, right: 5)), Align(alignment: Alignment.center, child: Container(height: getVerticalSize(19.00), width: getHorizontalSize(16.00), margin: getMargin(left: 13, bottom: 13), decoration: BoxDecoration(color: ColorConstant.deepOrange100, borderRadius: BorderRadius.circular(getHorizontalSize(9.00))))), AppbarImage(height: getVerticalSize(7.00), width: getHorizontalSize(2.00), svgPath: ImageConstant.img1, margin: getMargin(left: 19, top: 5, right: 7, bottom: 20))]))]), body: SizedBox(width: size.width, child: SingleChildScrollView(child: Padding(padding: getPadding(left: 14, top: 13, right: 11, bottom: 5), child: Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [CustomImageView(imagePath: ImageConstant.imgRectangle53, height: getVerticalSize(464.00), width: getHorizontalSize(351.00), radius: BorderRadius.circular(getHorizontalSize(18.00))), Align(alignment: Alignment.center, child: Padding(padding: getPadding(left: 17, top: 36, right: 5), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, crossAxisAlignment: CrossAxisAlignment.start, children: [Container(width: getHorizontalSize(222.00), child: Text("Women Black Animal Printed \nColourblocked Hooded Sweatshirt", maxLines: null, textAlign: TextAlign.left, style: AppStyle.txtRobotoBold17.copyWith(height: getVerticalSize(1.00)))), Padding(padding: getPadding(top: 3, bottom: 32), child: Text("\$19/day", overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoBold21.copyWith(height: getVerticalSize(1.00))))]))), Padding(padding: getPadding(left: 17, top: 13), child: Row(children: [Padding(padding: getPadding(top: 1), child: Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Text("Color", overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoRegular15.copyWith(height: getVerticalSize(1.00))), Container(width: getHorizontalSize(130.00), margin: getMargin(top: 10), padding: getPadding(left: 30, top: 2, right: 34, bottom: 2), decoration: AppDecoration.txtOutlineDeeporange100.copyWith(borderRadius: BorderRadiusStyle.txtRoundedBorder10), child: Text("Leopard", overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtPoppinsRegular15.copyWith(height: getVerticalSize(0.89))))])), Padding(padding: getPadding(left: 75), child: Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerRight, child: Text("Size", overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoRegular15.copyWith(height: getVerticalSize(1.00)))), Align(alignment: Alignment.center, child: Container(width: getSize(33.00), margin: getMargin(top: 9), padding: getPadding(left: 12, top: 7, right: 12, bottom: 7), decoration: AppDecoration.txtFillDeeporange100.copyWith(borderRadius: BorderRadiusStyle.txtRoundedBorder16), child: Text("S", overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoRegular15Black900.copyWith(height: getVerticalSize(1.00)))))]))])), Padding(padding: getPadding(left: 17, top: 33), child: Text("Brand", overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoRegular15.copyWith(height: getVerticalSize(1.00)))), Container(width: getHorizontalSize(130.00), margin: getMargin(left: 17, top: 4), padding: getPadding(left: 30, top: 2, right: 49, bottom: 2), decoration: AppDecoration.txtOutlineDeeporange100.copyWith(borderRadius: BorderRadiusStyle.txtRoundedBorder10), child: Text("Dior", overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtPoppinsRegular15.copyWith(height: getVerticalSize(0.89)))), Align(alignment: Alignment.center, child: Container(height: getVerticalSize(1.00), width: getHorizontalSize(272.00), margin: getMargin(top: 23), decoration: BoxDecoration(color: ColorConstant.gray400))), Padding(padding: getPadding(left: 17, top: 30), child: Text("Description", overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoRegular15.copyWith(height: getVerticalSize(1.00)))), Padding(padding: getPadding(left: 17, top: 6), child: Autocomplete(optionsBuilder: (TextEditingValue textEditingValue) {if (textEditingValue.text.isEmpty) {return const Iterable<String>.empty();} return autoCompleteItemList.where((String option) {return option.toString().contains(textEditingValue.text.toLowerCase());});}, fieldViewBuilder: (BuildContext context, TextEditingController fieldTextEditingController, FocusNode fieldFocusNode, VoidCallback onFieldSubmitted) {return Container(width: getHorizontalSize(301.00), child: TextFormField(controller: fieldTextEditingController, focusNode: fieldFocusNode, decoration: InputDecoration(hintText: "Women Black Animal Printed \nColourblocked Hooded Sweatshirt", hintStyle: TextStyle(color: ColorConstant.black900, fontSize: getFontSize(14), fontFamily: 'Roboto', fontWeight: FontWeight.w300, height: getVerticalSize(1.00)), border: InputBorder.none, isDense: true, contentPadding: getPadding(left: 11, top: 8, right: 11, bottom: 8)), style: TextStyle(color: ColorConstant.black900, fontSize: getFontSize(14), fontFamily: 'Roboto', fontWeight: FontWeight.w300, height: getVerticalSize(1.00))));}, child: Container(padding: getPadding(left: 11, top: 8, right: 11, bottom: 8), decoration: AppDecoration.outlineDeeporange100.copyWith(borderRadius: BorderRadiusStyle.roundedBorder12), child: Column(mainAxisSize: MainAxisSize.min, crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Container(width: getHorizontalSize(209.00), margin: getMargin(bottom: 79), child: Text("Women Black Animal Printed \nColourblocked Hooded Sweatshirt", maxLines: null, textAlign: TextAlign.left, style: AppStyle.txtRobotoRomanLight14.copyWith(height: getVerticalSize(1.00))))])))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(272.00), margin: getMargin(left: 20, top: 36), decoration: BoxDecoration(color: ColorConstant.gray400)), Container(height: getVerticalSize(307.00), width: getHorizontalSize(293.00), margin: getMargin(left: 13, top: 15), child: Stack(alignment: Alignment.centerLeft, children: [Align(alignment: Alignment.bottomRight, child: Container(height: getVerticalSize(1.00), width: getHorizontalSize(272.00), margin: getMargin(bottom: 72), decoration: BoxDecoration(color: ColorConstant.gray400))), Align(alignment: Alignment.centerLeft, child: Column(mainAxisSize: MainAxisSize.min, crossAxisAlignment: CrossAxisAlignment.end, mainAxisAlignment: MainAxisAlignment.start, children: [Padding(padding: getPadding(right: 84), child: Text("Reviews", overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoRomanBold17.copyWith(height: getVerticalSize(1.00)))), Padding(padding: getPadding(top: 21), child: ListView.separated(physics: NeverScrollableScrollPhysics(), shrinkWrap: true, separatorBuilder: (context, index) {return SizedBox(height: getVerticalSize(25.00));}, itemCount: 2, itemBuilder: (context, index) {return BookingFullItemWidget();})), Padding(padding: getPadding(top: 43, right: 64), child: Text("Profile seller", overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoRomanBold17.copyWith(height: getVerticalSize(1.00)))), Padding(padding: getPadding(top: 14, right: 67), child: Row(mainAxisAlignment: MainAxisAlignment.end, children: [CustomImageView(svgPath: ImageConstant.imgStar, height: getSize(18.00), width: getSize(18.00), radius: BorderRadius.circular(getHorizontalSize(1.00)), margin: getMargin(bottom: 2)), CustomImageView(svgPath: ImageConstant.imgStar1421x19, height: getVerticalSize(21.00), width: getHorizontalSize(19.00), radius: BorderRadius.circular(getHorizontalSize(1.00))), CustomImageView(svgPath: ImageConstant.imgStar, height: getSize(18.00), width: getSize(18.00), radius: BorderRadius.circular(getHorizontalSize(1.00)), margin: getMargin(bottom: 2)), CustomImageView(svgPath: ImageConstant.imgStar, height: getSize(18.00), width: getSize(18.00), radius: BorderRadius.circular(getHorizontalSize(1.00)), margin: getMargin(bottom: 2)), CustomImageView(svgPath: ImageConstant.imgStarGray300, height: getSize(18.00), width: getSize(18.00), radius: BorderRadius.circular(getHorizontalSize(1.00)), margin: getMargin(bottom: 2))]))]))])), Align(alignment: Alignment.center, child: Container(margin: getMargin(left: 5, top: 23, right: 14), padding: getPadding(left: 15, top: 12, right: 15, bottom: 12), decoration: AppDecoration.fillGray500.copyWith(borderRadius: BorderRadiusStyle.roundedBorder12), child: Row(mainAxisAlignment: MainAxisAlignment.center, children: [Container(height: getVerticalSize(56.00), width: getHorizontalSize(61.00), child: CircularProgressIndicator(value: 0.5, strokeWidth: getHorizontalSize(2.00))), Container(width: getHorizontalSize(79.00), margin: getMargin(left: 28, top: 8, bottom: 5), child: Text("Anne Christion", maxLines: null, textAlign: TextAlign.left, style: AppStyle.txtPoppinsRegular18.copyWith(height: getVerticalSize(0.74)))), Spacer(), CustomImageView(svgPath: ImageConstant.imgArrowrightWhiteA700, height: getVerticalSize(14.00), width: getHorizontalSize(15.00), margin: getMargin(top: 21, bottom: 22))]))), Align(alignment: Alignment.center, child: GestureDetector(onTap: () {onTapTxtAddtocart(context);}, child: Container(width: getHorizontalSize(211.00), margin: getMargin(top: 48), padding: getPadding(left: 30, top: 10, right: 54, bottom: 10), decoration: AppDecoration.txtFillDeeporange100.copyWith(borderRadius: BorderRadiusStyle.txtRoundedBorder10), child: RichText(text: TextSpan(children: [TextSpan(text: "A", style: TextStyle(color: ColorConstant.whiteA700, fontSize: getFontSize(18), fontFamily: 'Nunito Sans', fontWeight: FontWeight.w700, height: getVerticalSize(1.00))), TextSpan(text: "DD TO", style: TextStyle(color: ColorConstant.whiteA700, fontSize: getFontSize(18), fontFamily: 'Nunito Sans', fontWeight: FontWeight.w700, height: getVerticalSize(1.00))), TextSpan(text: " C", style: TextStyle(color: ColorConstant.whiteA700, fontSize: getFontSize(18), fontFamily: 'Nunito Sans', fontWeight: FontWeight.w700, height: getVerticalSize(1.00))), TextSpan(text: "ART", style: TextStyle(color: ColorConstant.whiteA700, fontSize: getFontSize(18), fontFamily: 'Nunito Sans', fontWeight: FontWeight.w700, height: getVerticalSize(1.00)))]), textAlign: TextAlign.left))))])))))); } 
onTapTxtAddtocart(BuildContext context) { Navigator.pushNamed(context, AppRoutes.cartScreen); } 
onTapArrowleft(BuildContext context) { Navigator.pop(context); } 
 }
